general {
        colors = true
        interval = 5
}

order += "wireless _first_"
order += "ethernet _first_"
order += "path_exists VPN"
order += "memory"
order += "cpu_usage"
order += "cpu_temperature 0"
order += "battery 0"
order += "time"

wireless _first_ {
        format_up = "W: %essid (%quality)"
        format_down = "W‚¨áÔ∏è"
}

ethernet _first_ {
        format_up = "E: %ip (%speed)"
        format_down = "E‚¨áÔ∏è"
}

memory {
        format = "ÔÉâ %used"
}

cpu_usage {
    format = "Ôãõ %usage"
    degraded_threshold = 25
    max_threshold = 50
}

cpu_temperature 0 {
        format = "Ôù´ %degrees"
        path = "/sys/devices/platform/coretemp.0/hwmon/hwmon4/temp1_input"
        max_threshold = 75
        format_above_threshold = "Ôù© %degrees"
}

battery 0 {
        format = "%status %percentage %remaining %emptytime"
        format_down = "No battery"
        status_chr = "‚ö° CHR"
        status_bat = "üîã BAT"
        status_unk = "? UNK"
        status_full = "‚òª FULL"
        path = "/sys/class/power_supply/BAT%d/uevent"
        low_threshold = 10
}

run_watch DHCP {
        pidfile = "/var/run/dhclient*.pid"
}

run_watch VPNC {
        # file containing the PID of a vpnc process
        pidfile = "/var/run/vpnc/pid"
}

path_exists VPN {
        # path exists when a VPN tunnel launched by nmcli/nm-applet is active
        path = "/proc/sys/net/ipv4/conf/tun0"
        format_down="VPN‚¨áÔ∏è"
}

tztime local {
        format = "%Y-%m-%d %H:%M:%S"
        hide_if_equals_localtime = true
}

tztime berlin {
        format = "%Y-%m-%d %H:%M:%S %Z"
        timezone = "Europe/Berlin"
}

load {
        format = "%5min"
}


disk "/" {
        format = "%free"
}

read_file uptime {
        path = "/proc/uptime"
}